# This file contains common pin mappings for the Fysetc CATALYST V1.0
# board. To use this config, the firmware should be compiled for the
# STM32F401 with "No bootloader" and Communication interface USB

# After running "make", run the following command to flash the board:
# dfu-util -R -a 0 -s 0x08000000:leave -D out/klipper.bin

## Voron Design VORON 0.2 
## FYSETC CATALYST V1.0 config

## *** THINGS TO CHANGE/CHECK: ***
## MCU path                                                                     [mcu] section
## Z and Extruder motor currents                                                [tmc2209 stepper_*] sections. Uncomment the stepper motor you have
## Full steps per rotation for Extruder                                         [extruder] section
## Thermistor types                                                             [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Extruder motor currents                                                      [extruder] section
## PID tune                                                                     [extruder] and [heater_bed] sections
## Fine tune E steps                                                            [extruder] section

## For more info                                                                check https://docs.vorondesign.com/build/startup/#v0
# See docs/Config_Reference.md for a description of parameters.

[include mainsail.cfg]

[force_move]
enable_force_move: true

[mcu]
#####################################################################
# Obtain definition by "ls -l /dev/serial/by-id/"
#####################################################################
serial: /dev/serial/by-path/platform-fd840000.usb-usb-0:1:1.0
#restart_method: command

#canbus_uuid=8cdbdf09ad3b 
#follow the instruction here if you use CAN bus: http://www.klipper3d.org/CANBUS.html?h=can



[mcu EBBCan]
#serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid: 988028f6ee49
canbus_interface: can0


[mcu EZBRD]
canbus_uuid: c9cd56f0de99
canbus_interface: can0

[printer]
kinematics: corexy
max_velocity: 200
max_accel: 3000
max_z_velocity: 15
max_z_accel: 45
square_corner_velocity: 6.0

[probe] 
pin: ^!EBBCan:PB6
x_offset: 0.0
y_offset: 0.0
z_offset: 0.0 # increase if head is too high at Z=0, decrease if head is too low at Z=0
speed: 2.0 #   Speed (in mm/s) of the Z axis when probing. The default is 5mm/s.
samples: 2
sample_retract_dist: 3.0
samples_tolerance_retries: 1
lift_speed: 10
activate_gcode:
    G4 P200 ;Wait 200ms

#####################################################################
#      X/Y Stepper Settings   X=B   Y=A
#####################################################################

[stepper_x]
step_pin: EZBRD: gpio16
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: EZBRD: gpio15                                                     # Check motor direction in link above. If inverted, remove ! before PC13
enable_pin: !EZBRD: gpio14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9 degree stepper motor, 200 is for 1.8 degree stepper motors
#endstop_pin: ^PA3
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 140
position_max: 140
homing_speed: 40                                                    # for sensorless homing it is recommended not to go above 40mm/s   
homing_retract_dist: 0
#homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: EZBRD: gpio17
interpolate: False
run_current: 0.7
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
diag_pin: EZBRD: gpio19                                                       # YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK 
driver_SGTHRS: 120                                                 # this is set to 255 which is the MAX sensitivity for sensorless homing, you will need to tune this later


[stepper_y]
step_pin: EZBRD: gpio10
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: EZBRD: gpio9                                                   # Check motor direction in link above. If inverted, remove ! before PC1
enable_pin: !EZBRD: gpio8
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9�?degree stepper motor, 200 is for 1.8�?stepper motors
#endstop_pin: ^PA2
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: 128
position_max: 128
homing_speed: 40                                                    # for sensorless homing it is recommended not to go above 40mm/s   
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: EZBRD: gpio11
interpolate: False
run_current: 0.7
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
diag_pin: EZBRD: gpio13                                              # YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK 
driver_SGTHRS: 120                                             # this is set to 255 which is the MAX sensitivity for sensorless homing, you will need to tune this later


#####################################################################
#   Z Stepper Settings
#####################################################################

[stepper_z]
step_pin: PB2
dir_pin: !PC5	                                                    # Remove the ! before PB8 if motor direction is inverted.
enable_pin: !PB10
rotation_distance: 40                                               # For T8x8 lead screw                                               # For T8x2 lead screw
microsteps: 32
endstop_pin: probe:z_virtual_endstop
position_max: 120
position_min: -15
homing_speed: 10
homing_retract_dist: 0
second_homing_speed: 5

[tmc2209 stepper_z]
uart_pin: PC4
#tx_pin: PA2
#uart_address: 2
interpolate: False
# For FYSETC 42HSC1404B-200N8
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0                                             # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle


[stepper_z1]
step_pin: PC15
dir_pin: !PC13
enable_pin: !PA10
rotation_distance: 40     
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PC14
#tx_pin: PA2
#uart_address: 2
interpolate: False
# For FYSETC 42HSC1404B-200N8
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0      


[stepper_z2]
step_pin: PC12
dir_pin: PC10
enable_pin: !PD2
rotation_distance: 40     
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PC11
#tx_pin: PA2
#uart_address: 2
interpolate: False
# For FYSETC 42HSC1404B-200N8
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0      

#####################################################################
#   Extruder
#####################################################################

[extruder]
step_pin: EBBCan: PD0
dir_pin: !EBBCan: PD1
enable_pin: !EBBCan: PD2
full_steps_per_rotation: 200    # Set to 200 for 1.8 degree motor, set to 400 for 0.9 degree stepper motor
gear_ratio: 44:8, 37:17
rotation_distance: 33.49             # For Mini Afterburner
microsteps: 32
heater_pin: EBBCan: PB13
sensor_type: Generic 3950
sensor_pin: EBBCan: PA3
nozzle_diameter: 0.400
filament_diameter: 1.750
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
control: pid            # Do PID calibration
pid_Kp: 28.182
pid_Ki: 1.978
pid_Kd: 100.397
min_temp: 0
max_temp: 290
min_extrude_temp: 170
max_extrude_only_distance: 150
max_extrude_cross_section: 1.5
pressure_advance: 0.2   # See tuning pressure advance doc
pressure_advance_smooth_time: 0.040


[tmc2209 extruder]
uart_pin: EBBCan: PA15
run_current: 0.650
stealthchop_threshold: 999999
#tx_pin: PA2
#uart_address: 3
interpolate: False
sense_resistor: 0.110                                          # Set to 0 for spreadcycle, avoid using stealthchop on extruder


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: PC8
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PB0
smooth_time: 3.0
#max_power: 0.6                                                      # Only needed for 100w pads
min_temp: 0
max_temp: 120
control: pid                                                         # Do PID calibration after initial checks
pid_kp: 68.453
pid_ki: 2.749
pid_kd: 426.122

#####################################################################
# Fan Control
#####################################################################

[heater_fan hotend_fan]
# FAN1 Connector
pin: EBBCan: PA1
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
fan_speed: 1.0                                                      # You can't PWM the delta fan unless using blue wire

[fan]
# Print Cooling Fan: FAN0 Connector
pin: EBBCan: PA0
max_power: 1.0
kick_start_time: 0.5                                                 # Depending on your fan, you may need to increase this value if your fan will not start
off_below: 0.13
cycle_time: 0.010

[temperature_fan CM68_Fan]
pin: PA8
max_power: 1.0
min_temp: 10
max_temp: 100
kick_start_time: 0.5
off_below: 0.1
control: watermark
sensor_type: temperature_host
#fan_speed: 1.0 


#####################################################################
# Temperature Sensor
#####################################################################

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

#[temperature_sensor CM68]
#sensor_type: temperature_host
#min_temp: 10
#max_temp: 100

#[temperature_sensor Chamber]
#sensor_type: Generic 3950
#sensor_pin: PA0
#min_temp:
#max_temp:
#   See the "extruder" section for the definition of the above
#   parameters.
#gcode_id:
#   See the "heater_generic" section for the definition of this
#   parameter.


#####################################################################
# Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

#####################################################################
# Neopixel
#####################################################################

[neopixel tool]
pin: EBBCan: PD3
chain_count: 3
color_order: GRBW
initial_RED: 0
initial_GREEN: 0
initial_BLUE: 1.0

[gcode_macro RGB_BLUE]
# Sets all 3 toolhead LEDs to blue
gcode:
    SET_LED LED=tool RED=0.0 GREEN=0.0 BLUE=1.0 INDEX=1    
    SET_LED LED=tool RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=2
    SET_LED LED=tool RED=1.0 GREEN=1.0 BLUE=1.0 INDEX=3
    M117 LEDs set to blue


#####################################################################
#   Simple V0 Display
#####################################################################

#[display]
#lcd_type: sh1106
#click_pin: ^!PA15
#i2c_bus: i2c1a
#i2c_mcu: mcu
#encoder_pins: ^PC1, ^PC2
#kill_pin: ^!PB12
#vcomh: 60
#x_offset: 2
#sda: pb9
#scl: pb8

#[neopixel display_led]
#pin: PC6
#color_order: GRB
#initial_RED: 0
#initial_GREEN: 0.1
#initial_BLUE: 0.4


#####################################################################
# Macros
#####################################################################
[safe_z_home]
home_xy_position: 70, 64
speed: 250.0
z_hop: 25
z_hop_speed: 15.0

#[homing_override]
#axes: x,y,z
#gcode:
#  RGB_BLUE
#  SET_KINEMATIC_POSITION X=0 Y=0; Assume starting position to avoid "Must home" error
#  G90                          ; Set absolute positioning
#  G28 X                       ; Home X axis
#  G28 Y                       ; Home Y axis
#  G1 X70 Y64 F3600            ; Move to X=60, Y=60 (bed center) at 60mm/
#  G28 Z                       ; Home Z axis
#  G1 Z30


[z_tilt]
## Z tilt adjustment for Voron V0 with triple Z motors
## Probes three points to level gantry (front-left, front-right, rear-center)
z_positions:
  70 , 128    # Z0 (rear, arbitrary X/Y for reference)
  0 , 0    # Z1 (left motor)
  140 , 0    # Z2 (right motor)
points:
  65, 123     # Front-left (avoid bed edge/clips)
  20, 20    # Front-right
  120, 20    # Rear-center (near Y=120)
speed: 200           # Probe speed (mm/s)
horizontal_move_z: 5 # Z height for moves between points
retries: 5           # Max adjustment attempts
retry_tolerance: 0.02 # Retry if deviation > 0.01mm

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
gcode:
    RGB_BLUE
    G28                            ; home all axes
    G90                            ; absolute positioning    
    G1 Z20 F3000                   ; move nozzle away from bed
   
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
 
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    G91                            ; relative positioning                      


    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600    ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X0 F3600          ; park nozzle at rear
    M84


[gcode_macro LOAD_FILAMENT]
gcode:
   M109 T0 S210                   ; set extruder temp and wait 
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute


[virtual_sdcard]
path: /home/linaro/printer_data/gcodes/
#   The path of the local directory on the host machine to look for
#   g-code files. This is a read-only directory (sdcard file writes
#   are not supported). One may point this to OctoPrint's upload
#   directory (generally ~/.octoprint/uploads/ ). This parameter must
#   be provided.
#on_error_gcode:
#   A list of G-Code commands to execute when an error is reported.


#####################################################################
#   ADXL345
#####################################################################

#[adxl345]
#cs_pin: PA4
#   The SPI enable pin for the sensor. This parameter must be provided.
#spi_speed: 5000000
#   The SPI speed (in hz) to use when communicating with the chip.
#   The default is 5000000.
#spi_bus: spi1
#spi_software_sclk_pin:
#spi_software_mosi_pin:
#spi_software_miso_pin:
#   See the "common SPI settings" section for a description of the
#   above parameters.
#axes_map: -x, -z, y
#   The accelerometer axis for each of the printer's X, Y, and Z axes.
#   This may be useful if the accelerometer is mounted in an
#   orientation that does not match the printer orientation. For
#   example, one could set this to "y, x, z" to swap the X and Y axes.
#   It is also possible to negate an axis if the accelerometer
#   direction is reversed (eg, "x, z, -y"). The default is "x, y, z".
#rate: 3200
#   Output data rate for ADXL345. ADXL345 supports the following data
#   rates: 3200, 1600, 800, 400, 200, 100, 50, and 25. Note that it is
#   not recommended to change this rate from the default 3200, and
#   rates below 800 will considerably affect the quality of resonance
#   measurements.

#[resonance_tester]
#accel_chip: adxl345
#accel_per_hz: 75  # default is 75
#probe_points:
#    60, 60, 20  # an example

[input_shaper]
shaper_freq_x: 66
shaper_type_x: ei
shaper_freq_y: 70.8
shaper_type_y: mzv

#[menu __main __octoprint]
#type: disabled
